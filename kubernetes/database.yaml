
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    name: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
  #clusterIP: None
  selector:
    role: mongo
    
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  updateStrategy:
    type: RollingUpdate
  replicas: 1 
  selector:
    matchLabels:
      role: mongo
  template:
    metadata:
      labels:
        role: mongo
        environment: ${environment}
    spec:
      terminationGracePeriodSeconds: 60
      nodeSelector:
$(list=(${database__nodeSelectors// / }); for k in "${!list[@]}"; do kv=(${list[k]//\=/ }); echo "        ${kv[0]}: ${kv[1]}"; done)
      containers:
        - name: mongo
          image: mongo:4.0
          command:
            - mongod
            # - --config=/data/configdb/mongod.conf
            - --dbpath=/data/db
            #- "--replSet"
            #- "${environment}"
            #- "--smallfiles"
            - "--noprealloc"
            - "--bind_ip"
            - 0.0.0.0
          env:
            - name: MONGO_INITDB_DATABASE
              value: site
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: password
          ports:
            - containerPort: 27017
          livenessProbe:
            initialDelaySeconds: 300
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
          readinessProbe:
            initialDelaySeconds: 60
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
          #  - name: docker-initdb-config
          #    mountPath: /docker-entrypoint-initdb.d
        #- name: mongo-sidecar
        #  image: cvallance/mongo-k8s-sidecar
        #  env:
        #    - name: KUBERNETES_MONGO_SERVICE_NAME
        #      value: mongo
        #    - name: MONGO_SIDECAR_POD_LABELS
        #      value: "role=mongo,environment=${environment}"
      #volumes:
      #  - name: docker-initdb-config
      #    configMap:
      #      name: docker-initdb-config
      #      items:
      #      - key: 10_users.sh
      #        path: 10_users.sh
      #      - key: 20_site.js
      #        path: 20_site.js
      #      - key: 30_instruments.js
      #        path: 30_instruments.js
      #      - key: 40_experiments.sh
      #        path: 40_experiments.sh
      #      - key: 45_experiment_switch.js
      #        path: 45_experiment_switch.js
      #      - key: 50_site-roles.js
      #        path: 50_site-roles.js
        
  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: ${namespace}--mongo--${environment}
        resources:
          requests:
            storage: 20Gi

